#include <GL/glut.h>
#include <iostream>
#include <string>

void  drawAxis(){
  glBegin(GL_LINE);
  glColor3f(1, 0, 0); glVertex3f(0, 0, 0); glVertex3f(6.5, 0, 0);
  glColor3f(0, 1, 0); glVertex3f(0, 0, 0); glVertex3f(0, 4, 0);
  glColor3f(0, 0, 1); glVertex3f(0, 0, 0); glVertex3f(0, 0, -8);
  glEnd();
}

void drawPlane(){
  glColor3f(1.0, 1.0, 1.0);

  glBegin(GL_LINES);
  for (GLfloat  i = 0; i <= 6; i+= 0.25){
      glVertex3f(i, 0, -6);
      glVertex3f(i, 0, 0);
      glVertex3f(6, 0, -i);
      glVertex3f(0, 0, -i);
  }
  glEnd();
}

void drawCoordinates(float x, float y, float z){
  std::string text = "(" + std::to_string(x) + "," +std::to_string(y) + "," + std::to_string(z) + ")";
  glRasterPos3f(x, y, z);
  for(char c : test){
      glutBitmapCharacter(GLUT_BITMAP_HELVETICA_12, c);
  }
}

void display(){
  glClear(GL_COLOR_BUFFER_BIT);

  drawPlane();
  drawAxis();

  glPushMatrix();
  glTranslatef(4.0, 0.0, -1.3);
  glColor3f(180.0f / 255.0f, 43.0f / 255.0f, 226.0f / 255.0f);
  glutSolidCube(0.75);
  glPopMatrix();
  drawCoordinates(3.3, 0.0, 0.2);

  glPushMatrix();
  glTranslatef(1.5, 0.0, -3.3);
  glRotatef(180.0, 0.0, 1.0, 0.0);
  glColor3f(155.0f / 255.0f, 228.0f / 255.0f, 102.0f / 255.0f);
  glutSolidTeapot(0,6);
  glPopMatrix();
  drawCoordinates(1.2, 0.2, -0.95);

  glPushMatrix();
  glTranslatef(3.0, 0.0, -5.0);  
  glColor3f(348.0f / 255.0f, 155.0f / 255.0f, 0.0f / 255.0f);
  glRotatef(-90.0f, 1.0f, 0.0f, 0.0f);
  glutSolidCone(0.5, 1, 20, 20);
  glPopMatrix();
  drawCoordinates(3.2, 0.7, -5.0);
  glFlush();
}

void init(){
  glClearColor(0.6, 0.6, 0.6, 1.0);

  glMatrixMode(GL_PROJECTION);
  glLoadIdentity();
  gluLookAt(3, 3, 4.5, 3, -2, -20, 0, 1, 0);
}

int main (int argc, char** argv){
  glutInit(&argc, argv);
  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
  glutInitWindowPosition(120, 80);
  glutInitWindowSize(1280, 980);
  glutCreateWindow("Objects");
  glutDisplayFunc(display);
  init();
  glutMainLoop();
}
  
